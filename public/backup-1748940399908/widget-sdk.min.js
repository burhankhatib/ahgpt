(function() {
    'use strict';
    
    // Widget configuration interface
    function AlHayatGPTWidget(config) {
        this.config = {
            apiEndpoint: 'https://www.alhayatgpt.com',
            theme: 'auto',
            width: '100%',
            height: '600px',
            allowGuests: true,
            ...config
        };
        
        this.iframe = null;
        this.container = null;
        this.messageHandlers = new Map();
        this.messageEventHandler = null;
        this.token = null;
        
        this.init();
    }
    
    AlHayatGPTWidget.prototype.init = function() {
        this.container = document.getElementById(this.config.containerId);
        if (!this.container) {
            throw new Error('Container with ID "' + this.config.containerId + '" not found');
        }
        
        this.token = this.getToken();
        if (!this.token && !this.config.allowGuests) {
            this.showSignInButton();
            return;
        }
        
        this.createIframe();
        this.setupMessageHandling();
        this.applyStyles();
    };
    
    AlHayatGPTWidget.prototype.getToken = function() {
        var urlToken = new URLSearchParams(window.location.search).get('token');
        if (urlToken) {
            localStorage.setItem('ahgpt_token', urlToken);
            var url = new URL(window.location.href);
            url.searchParams.delete('token');
            window.history.replaceState({}, document.title, url.toString());
            return urlToken;
        }
        return localStorage.getItem('ahgpt_token');
    };
    
    AlHayatGPTWidget.prototype.showSignInButton = function() {
        var btn = document.createElement('button');
        btn.innerText = 'Sign in to save your chats';
        btn.style.cssText = 'padding: 12px 24px; background: linear-gradient(135deg, #3b82f6, #1d4ed8); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 14px; font-weight: 500;';
        btn.onclick = function() {
            var redirectUrl = encodeURIComponent(window.location.href);
            window.location.href = 'https://www.alhayatgpt.com/sign-in?redirect_url=' + redirectUrl;
        };
        this.container.appendChild(btn);
    };
    
    AlHayatGPTWidget.prototype.createIframe = function() {
        this.iframe = document.createElement('iframe');
        
        var widgetUrl = new URL(this.config.apiEndpoint + '/widget/chat');
        widgetUrl.searchParams.set('theme', this.config.theme);
        widgetUrl.searchParams.set('allowGuests', this.config.allowGuests.toString());
        
        if (this.config.clerkPublishableKey) {
            widgetUrl.searchParams.set('clerkKey', this.config.clerkPublishableKey);
        }
        
        widgetUrl.searchParams.set('parentOrigin', window.location.origin);
        
        this.iframe.src = widgetUrl.toString();
        this.iframe.style.cssText = 'width: ' + this.config.width + '; height: ' + this.config.height + '; border: none; border-radius: 12px; box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);';
        this.iframe.setAttribute('sandbox', 'allow-scripts allow-same-origin allow-forms allow-popups');
        this.iframe.setAttribute('allow', 'clipboard-write');
        
        this.container.appendChild(this.iframe);
    };
    
    AlHayatGPTWidget.prototype.setupMessageHandling = function() {
        var self = this;
        this.messageEventHandler = function(event) {
            if (!event.origin.includes(new URL(self.config.apiEndpoint).hostname)) {
                return;
            }
            
            var message = event.data;
            self.handleMessage(message);
        };
        
        window.addEventListener('message', this.messageEventHandler);
    };
    
    AlHayatGPTWidget.prototype.handleMessage = function(message) {
        switch (message.type) {
            case 'WIDGET_READY':
                if (this.config.onReady) this.config.onReady();
                break;
                
            case 'USER_SIGNED_IN':
                if (this.config.onUserSignIn) this.config.onUserSignIn(message.payload);
                break;
                
            case 'USER_SIGNED_OUT':
                if (this.config.onUserSignOut) this.config.onUserSignOut();
                break;
                
            case 'RESIZE':
                if (this.iframe && message.payload && message.payload.height) {
                    this.iframe.style.height = message.payload.height + 'px';
                }
                break;
                
            case 'ERROR':
                var error = new Error(message.payload && message.payload.message ? message.payload.message : 'Widget error');
                if (this.config.onError) this.config.onError(error);
                break;
        }
        
        var handlers = this.messageHandlers.get(message.type) || [];
        handlers.forEach(function(handler) {
            handler(message.payload);
        });
    };
    
    AlHayatGPTWidget.prototype.applyStyles = function() {
        if (this.config.customStyles && this.container) {
            Object.assign(this.container.style, this.config.customStyles);
        }
    };
    
    AlHayatGPTWidget.prototype.on = function(eventType, handler) {
        if (!this.messageHandlers.has(eventType)) {
            this.messageHandlers.set(eventType, []);
        }
        this.messageHandlers.get(eventType).push(handler);
    };
    
    AlHayatGPTWidget.prototype.off = function(eventType, handler) {
        var handlers = this.messageHandlers.get(eventType);
        if (handlers) {
            var index = handlers.indexOf(handler);
            if (index > -1) {
                handlers.splice(index, 1);
            }
        }
    };
    
    AlHayatGPTWidget.prototype.sendMessage = function(type, payload) {
        if (this.iframe && this.iframe.contentWindow) {
            var message = { type: type, payload: payload, token: this.token };
            this.iframe.contentWindow.postMessage(message, this.config.apiEndpoint);
        }
    };
    
    AlHayatGPTWidget.prototype.updateConfig = function(newConfig) {
        this.config = Object.assign(this.config, newConfig);
        this.sendMessage('UPDATE_CONFIG', newConfig);
    };
    
    AlHayatGPTWidget.prototype.destroy = function() {
        if (this.iframe) {
            this.iframe.remove();
            this.iframe = null;
        }
        if (this.messageEventHandler) {
            window.removeEventListener('message', this.messageEventHandler);
            this.messageEventHandler = null;
        }
        this.messageHandlers.clear();
    };
    
    // Global widget factory
    window.AlHayatGPT = {
        createWidget: function(config) {
            return new AlHayatGPTWidget(config);
        },
        version: '1.0.0'
    };
})();